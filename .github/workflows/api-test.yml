name: "Build the app then test API endpoints tests with Newman Tests"
on: [pull_request]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: test-db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      kafka:
        image: confluentinc/cp-kafka:latest
        env:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
        ports:
          - 29092:29092
      zookeeper:
        image: confluentinc/cp-zookeeper:latest
        env:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000
        ports:
          - "2181:2181"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '18'
          distribution: adopt

      - name: Build application
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/transfer_flow?createDatabaseIfNotExist=true
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          TRANSFERFLOW_API_AUTH_GOOGLE_CLIENT_ID: ${{ secrets.TRANSFERFLOW_API_AUTH_GOOGLE_CLIENT_ID }}
          TRANSFERFLOW_API_TOKEN_SECRET_KEY: ${{ secrets.TRANSFERFLOW_API_TOKEN_SECRET_KEY }}
          TRANSFERFLOW_FILE_ENCRYPTION_KEY: f0e1d2c3b4a5968778695a4b3c2d1e0f
          TRANSFERFLOW_FILE_EXPIRY_DATE: 7
          TRANSFERFLOW_FILE_VAULT_MAIN_DIRECTORY: ./.transferflow
          KAFKA_BOOTSTRAP_SERVER: kafka:29092
          SPRING_PROFILE: testing
        run: ./mvnw --no-transfer-progress clean package

      - name: "Start Spring Boot application"
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/transfer_flow?createDatabaseIfNotExist=true
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          TRANSFERFLOW_API_AUTH_GOOGLE_CLIENT_ID: ${{ secrets.TRANSFERFLOW_API_AUTH_GOOGLE_CLIENT_ID }}
          TRANSFERFLOW_API_TOKEN_SECRET_KEY: ${{ secrets.TRANSFERFLOW_API_TOKEN_SECRET_KEY }}
          TRANSFERFLOW_FILE_ENCRYPTION_KEY: f0e1d2c3b4a5968778695a4b3c2d1e0f
          TRANSFERFLOW_FILE_EXPIRY_DATE: 7
          TRANSFERFLOW_FILE_VAULT_MAIN_DIRECTORY: ./.transferflow
          KAFKA_BOOTSTRAP_SERVER: kafka:29092
          SPRING_PROFILE: testing
        run: |
          nohup java -jar target/*.jar --KAFKA_BOOTSTRAP_SERVER=kafka:29092 --SPRING_PROFILE=testing --SPRING_DATASOURCE_URL=jdbc:mysql://localhost:3306/transfer_flow?createDatabaseIfNotExist=true --SPRING_DATASOURCE_USERNAME=root --SPRING_DATASOURCE_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }} --TRANSFERFLOW_API_GOOGLE_CLIENT_ID=test --TRANSFERFLOW_API_TOKEN_SECRET_KEY=${{ secrets.TRANSFERFLOW_API_TOKEN_SECRET_KEY }} --SPRING_PROFILE=testing --TRANSFERFLOW_FILE_ENCRYPTION_KEY=f0e1d2c3b4a5968778695a4b3c2d1e0f --TRANSFERFLOW_FILE_EXPIRY_DATE=7 --TRANSFERFLOW_FILE_VAULT_MAIN_DIRECTORY=./.transferflow &
      

      - name: Wait for Spring Boot application to start
        run: sleep 15

      - name: Check if port 80 is open
        uses: nrukavkov/open-ports-check-action@v1
        with:
          port: 8080
          host: 'localhost'
          pause: 1000
          needFail: 'true'
          reverse: 'false'

      - name: Run API Tests
        run: newman run ./src/test/postman/collection.json -e ./src/test/postman/env.json

