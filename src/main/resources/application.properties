## Profiles
spring.profiles.active=${SPRING_PROFILE}
## Hibernate configuration
spring.jpa.hibernate.ddl-auto=update

## Spring configuration for .env file.
spring.config.import=optional:file:./env.properties


## Spring DataSource config
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


## JPA Config
spring.jpa.show-sql=false

spring.jpa.database=mysql
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

spring.jpa.properties.hibernate.format_sql=true
# Transfer Flow Config
transferflow.auth.sso.google.client.id=${TRANSFERFLOW_API_AUTH_GOOGLE_CLIENT_ID}
transferflow.api.token.secret.key=${TRANSFERFLOW_API_TOKEN_SECRET_KEY}
transferflow.storage.vault.directory=${TRANSFERFLOW_FILE_VAULT_MAIN_DIRECTORY:/home/nilm/.transferflow}
transferflow.security.actuator.password=${TRANSFERFLOW_SECURITY_ACTUATOR_PASSWORD:test}
# Prometheus Config
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.prometheus.metrics.export.enabled=true
#Logger state
#logging.level.org.springframework.web=debug
#logging.level.org.apache=debug
#logging.level.root=debug

# Max file size
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=200MB
#logging.level.org.springframework.web=debug
#logging.level.org.apache=debug
#logging.level.root=debug
#logging.level.org.apache.kafka=debug

# Kafka
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVER:localhost:9092}
spring.kafka.properties.sasl.jaas.config=${KAFKA_SASL_JAAS_CONFIG:null}
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.properties.spring.json.type.mapping=event:fr.nil.transfer.flow.backedflow.event.AccountCreationEvent
server.port=${SPRING_WEB_PORT:8080}