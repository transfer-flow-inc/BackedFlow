{
	"info": {
		"_postman_id": "f32d7229-9e56-49b3-a619-86ddee57fadc",
		"name": "TransferFlow API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24752067",
		"_collection_link": "https://dark-spaceship-572108.postman.co/workspace/TransferFlow-API~89eff9a8-d9b6-4b9a-ba31-72462ef67dd2/collection/24752067-f32d7229-9e56-49b3-a619-86ddee57fadc?action=share&creator=24752067&source=collection_link"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Register a new User into the Database",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"    pm.test(\"Response status code is 200\", function () {",
									"        pm.expect(pm.response.code).to.equal(200);",
									"    });",
									"",
									"    pm.test(\"Response contains a token\", function () {",
									"        pm.expect(pm.response.json()).to.have.property('token').that.is.a('string');",
									"    });",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var email = \"test\" + Math.floor(Math.random() * 10000) + \"@example.com\";",
									"var password = \"password123\";",
									"var firstName = \"John\";",
									"var lastName = \"Doe\";",
									"",
									"    pm.environment.set(\"email\", email);",
									"    pm.environment.set(\"password\", password);",
									"    pm.environment.set(\"firstName\", firstName);",
									"    pm.environment.set(\"lastName\", lastName);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Nilq\",\n    \"lastName\": \"MALHOMMEq\",\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ baseURL}}/api/v1/auth/register",
							"protocol": "http",
							"host": [
								"{{ baseURL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request  JWT token from the backend",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response contains a token\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('token');",
									"        pm.environment.set(\"authToken\", pm.response.json().token);",
									"",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ baseURL}}/api/v1/auth/authenticate",
							"protocol": "http",
							"host": [
								"{{ baseURL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"authenticate"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Folder",
			"item": [
				{
					"name": "Upload file to database",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response contains folder and accessKey objects\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData).to.have.property('folder');",
									"    pm.expect(jsonData).to.have.property('accessKey');",
									"});",
									"",
									"pm.test(\"The folder object has a non-empty fileEntityList\", function () {",
									"    var jsonData = pm.response.json();",
									"    var fileEntityList = jsonData.folder.fileEntityList;",
									"",
									"    pm.expect(fileEntityList).to.be.an('array').that.is.not.empty;",
									"});",
									"",
									"pm.test(\"The folder object has an id\", function () {",
									"    var jsonData = pm.response.json();",
									"    var folderId = jsonData.folder.id;",
									"",
									"    pm.expect(folderId).to.exist.and.to.be.a('string').and.to.have.lengthOf.above(0);",
									"});",
									"",
									"pm.test(\"Adding object value to environment for further testing\", function () {",
									"    pm.environment.set(\"folderID\", response.folder.id);",
									"    pm.environment.set(\"folderURL\", response.folder.url);",
									"    pm.environment.set(\"accessKey\", response.accessKey);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "./src/test/postman/testFile.txt"
								}
							]
						},
						"url": {
							"raw": "http://{{ baseURL}}/api/v1/folder/upload",
							"protocol": "http",
							"host": [
								"{{ baseURL}}"
							],
							"path": [
								"api",
								"v1",
								"folder",
								"upload"
							],
							"query": [
								{
									"key": "folderURL",
									"value": "coucou",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Download all file from folder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has content-type header of mime/application-octet\", function () {",
									"    pm.expect(pm.response.headers.get('content-type')).to.include('application/octet-stream');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{ baseURL}}/api/v1/folder/download/{{folderURL}}?accessKey={{accessKey}}",
							"protocol": "http",
							"host": [
								"{{ baseURL}}"
							],
							"path": [
								"api",
								"v1",
								"folder",
								"download",
								"{{folderURL}}"
							],
							"query": [
								{
									"key": "accessKey",
									"value": "{{accessKey}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a random Folder entity from DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is a JSON object\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response contains an id property\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('id');",
									"    pm.environment.set(\"folderID\", pm.response.json().id);",
									"});",
									"",
									"pm.test(\"Response contains a fileEntityList property\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('fileEntityList');",
									"});",
									"",
									"pm.test(\"Response contains a folderOwner object\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('folderOwner').that.is.an('object');",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{ baseURL}}/api/v1/test/folder/random",
							"protocol": "http",
							"host": [
								"{{ baseURL}}"
							],
							"path": [
								"api",
								"v1",
								"test",
								"folder",
								"random"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a Folder object from the Folder ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response contains an id\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('id');",
									"});",
									"",
									"pm.test(\"Response contains a fileEntityList\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('fileEntityList');",
									"});",
									"",
									"pm.test(\"Response contains a folderOwner\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('folderOwner');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{ baseURL}}/api/v1/folder/{{folderID}}",
							"protocol": "http",
							"host": [
								"{{ baseURL}}"
							],
							"path": [
								"api",
								"v1",
								"folder",
								"{{folderID}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}